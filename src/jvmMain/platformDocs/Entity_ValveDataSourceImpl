ValveDataSourceImpl : ValveDataSource -- Entity

    This class implements the ValveDataSource Interface. Instances are Immutable and methods only return new
    instances of ValveDataSourceImpl


Data:
    1. private valveMap : Map<Int, Valve?>
        stores Valve objects at a specified index.

Does:

    1. getValve(index) :: (Int) -> Valve
        returns the Valve object located at index.

    2. getValves() :: () -> List<Valve?>
        returns a list of Valve objects in order of index. List length will be one greater than the highest index in
        the valveMap. Indices not represented in the valveMap will be returned as null values.

    2. addValve(index, valve) :: (Int, Valve) -> ValveDataSourceImpl
        returns a new ValveDataSourceImpl with valveMap overwritten by the parameter Valve object at the given index.

    3. addValves(nullableValvesList) :: (List<Valve?>) -> ValveDataSourceImpl
        returns a new ValveDataSourceImpl with valveMap overwritten by Valve objects in the parameter list. Null
        values in the parameter list will Not overwrite entries existing in the current valveMap.

    4. removeValve(index) :: Int -> ValveDataSourceImpl
        returns a new ValveDataSourceImpl without the Valve object at index.

Doesn't:
    1. Allow getValve(index) if the key 'index' does not exist in the valveMap. Throw IllegalArgumentException

    2. Allow removeValve(index) if the key 'index' does not exist in valveMap. Throw IllegalArgumentException